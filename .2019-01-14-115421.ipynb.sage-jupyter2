{"type":"settings","backend_state":"running","trust":true,"kernel":"anaconda3","kernel_state":"idle"}
{"type":"file","last_load":1547463242675}
{"exec_count":1,"input":"import h5py\nimport numpy as np\nimport sys\nimport os\nimport pandas as pd\nimport matplotlib.pyplot as plt\n#plt.style.use('default')","state":"done","pos":0,"type":"cell","id":"11563b","kernel":"anaconda3"}
{"output":{"0":{"name":"stdout","text":"Done!\n"}},"exec_count":6,"start":1547644112378,"input":"dfallList={}\nfor i in range(len(pathList)):\n    #TODO read funktion inform\n    f = h5py.File(pathList[i], \"r\")\n    s = int(pathList[i][62:65])\n    #type=0\n    pos = np.float32(f['/PartType0/Coordinates'].value)\n    ID  = np.uint32(f['/PartType0/ParticleIDs'].value)\n    dens = np.array(f['PartType0/Density'])\n    df0=pd.DataFrame({\"x\":pos[:,0],\"y\":pos[:,1],\"z\":pos[:,2],\"dens\":dens , \"ID\":ID, \"snap\":ID*0+s})\n    dfallList[i]=df0\n    #TODO close f\ndfa = pd.concat(dfallList)\nprint(\"Done!\")","scrolled":true,"state":"done","pos":3,"type":"cell","end":1547644154725,"id":"4fd2b7","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>x</th>\n      <th>y</th>\n      <th>z</th>\n      <th>dens</th>\n      <th>ID</th>\n      <th>snap</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"30\" valign=\"top\">0</th>\n      <th>0</th>\n      <td>46.649570</td>\n      <td>50.471172</td>\n      <td>48.033115</td>\n      <td>488287.000000</td>\n      <td>58359677</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>46.648933</td>\n      <td>50.471199</td>\n      <td>48.033249</td>\n      <td>518197.312500</td>\n      <td>58369408</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>46.648834</td>\n      <td>50.471596</td>\n      <td>48.033710</td>\n      <td>441505.781250</td>\n      <td>58365040</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>46.648586</td>\n      <td>50.471092</td>\n      <td>48.032730</td>\n      <td>556973.000000</td>\n      <td>58369336</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>46.649689</td>\n      <td>50.471325</td>\n      <td>48.034214</td>\n      <td>544702.187500</td>\n      <td>58355805</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>46.649357</td>\n      <td>50.471149</td>\n      <td>48.034470</td>\n      <td>598597.812500</td>\n      <td>58170487</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>46.649689</td>\n      <td>50.471661</td>\n      <td>48.033070</td>\n      <td>375055.656250</td>\n      <td>58376852</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>46.647968</td>\n      <td>50.470863</td>\n      <td>48.032887</td>\n      <td>551544.437500</td>\n      <td>58203739</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>46.649826</td>\n      <td>50.470898</td>\n      <td>48.033073</td>\n      <td>622216.687500</td>\n      <td>58069002</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>46.648083</td>\n      <td>50.471363</td>\n      <td>48.032757</td>\n      <td>616549.125000</td>\n      <td>58112039</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>46.648216</td>\n      <td>50.470783</td>\n      <td>48.032356</td>\n      <td>632018.250000</td>\n      <td>58247371</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>46.649879</td>\n      <td>50.471478</td>\n      <td>48.032578</td>\n      <td>411251.781250</td>\n      <td>58141601</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>46.649109</td>\n      <td>50.472034</td>\n      <td>48.033802</td>\n      <td>264494.250000</td>\n      <td>58386354</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>46.648533</td>\n      <td>50.471039</td>\n      <td>48.032249</td>\n      <td>624027.187500</td>\n      <td>58331750</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>46.648743</td>\n      <td>50.472046</td>\n      <td>48.033161</td>\n      <td>254182.687500</td>\n      <td>58331749</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>46.649864</td>\n      <td>50.471180</td>\n      <td>48.034817</td>\n      <td>598560.062500</td>\n      <td>58382760</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>46.648994</td>\n      <td>50.471325</td>\n      <td>48.032181</td>\n      <td>498364.156250</td>\n      <td>58287782</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>46.650192</td>\n      <td>50.471409</td>\n      <td>48.031990</td>\n      <td>563442.187500</td>\n      <td>58283534</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>46.647591</td>\n      <td>50.471535</td>\n      <td>48.033550</td>\n      <td>535302.000000</td>\n      <td>58339184</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>46.649036</td>\n      <td>50.470936</td>\n      <td>48.031982</td>\n      <td>625085.750000</td>\n      <td>57851785</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>46.648464</td>\n      <td>50.471878</td>\n      <td>48.034336</td>\n      <td>432864.500000</td>\n      <td>57951751</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>46.647625</td>\n      <td>50.470718</td>\n      <td>48.033154</td>\n      <td>598801.250000</td>\n      <td>58184005</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>46.649235</td>\n      <td>50.470757</td>\n      <td>48.033089</td>\n      <td>625212.312500</td>\n      <td>58254197</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>46.648621</td>\n      <td>50.471149</td>\n      <td>48.034386</td>\n      <td>613892.937500</td>\n      <td>55138860</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>46.650803</td>\n      <td>50.472397</td>\n      <td>48.031582</td>\n      <td>155073.218750</td>\n      <td>58191072</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>46.648693</td>\n      <td>50.470951</td>\n      <td>48.033344</td>\n      <td>642443.500000</td>\n      <td>58332283</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>46.648956</td>\n      <td>50.471516</td>\n      <td>48.034889</td>\n      <td>416103.781250</td>\n      <td>58334510</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>46.647457</td>\n      <td>50.470325</td>\n      <td>48.032444</td>\n      <td>529780.750000</td>\n      <td>58211724</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>46.647545</td>\n      <td>50.469635</td>\n      <td>48.031887</td>\n      <td>472317.875000</td>\n      <td>57980274</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>46.649639</td>\n      <td>50.472435</td>\n      <td>48.031876</td>\n      <td>137119.015625</td>\n      <td>58317560</td>\n      <td>122</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"30\" valign=\"top\">47</th>\n      <th>2470350</th>\n      <td>44.401577</td>\n      <td>51.789410</td>\n      <td>52.143421</td>\n      <td>18.433969</td>\n      <td>58628089</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470351</th>\n      <td>42.902733</td>\n      <td>52.947956</td>\n      <td>52.347656</td>\n      <td>15.829842</td>\n      <td>58628114</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470352</th>\n      <td>42.503258</td>\n      <td>52.770645</td>\n      <td>52.143730</td>\n      <td>4.231452</td>\n      <td>58628116</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470353</th>\n      <td>42.380413</td>\n      <td>53.059055</td>\n      <td>52.003857</td>\n      <td>8.453901</td>\n      <td>58628117</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470354</th>\n      <td>42.947502</td>\n      <td>52.585777</td>\n      <td>52.110508</td>\n      <td>16.737438</td>\n      <td>58628118</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470355</th>\n      <td>42.779404</td>\n      <td>52.749760</td>\n      <td>52.283253</td>\n      <td>17.474424</td>\n      <td>58628119</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470356</th>\n      <td>43.108303</td>\n      <td>52.886097</td>\n      <td>51.968761</td>\n      <td>60.096485</td>\n      <td>58628120</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470357</th>\n      <td>43.291019</td>\n      <td>52.900257</td>\n      <td>51.873398</td>\n      <td>56.861469</td>\n      <td>58628121</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470358</th>\n      <td>43.258678</td>\n      <td>52.808788</td>\n      <td>51.920937</td>\n      <td>114.649315</td>\n      <td>58628122</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470359</th>\n      <td>43.062485</td>\n      <td>52.851883</td>\n      <td>51.917850</td>\n      <td>46.760509</td>\n      <td>58628123</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470360</th>\n      <td>45.720478</td>\n      <td>51.128029</td>\n      <td>50.609440</td>\n      <td>131.648300</td>\n      <td>58628157</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470361</th>\n      <td>47.221561</td>\n      <td>49.511116</td>\n      <td>52.811924</td>\n      <td>6.720039</td>\n      <td>58628217</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470362</th>\n      <td>42.165802</td>\n      <td>55.619591</td>\n      <td>50.422802</td>\n      <td>22.290997</td>\n      <td>58628233</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470363</th>\n      <td>42.039436</td>\n      <td>54.957787</td>\n      <td>51.516560</td>\n      <td>15.469007</td>\n      <td>58628234</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470364</th>\n      <td>41.200943</td>\n      <td>54.826187</td>\n      <td>52.114681</td>\n      <td>92.829994</td>\n      <td>58628235</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470365</th>\n      <td>41.388264</td>\n      <td>54.806763</td>\n      <td>51.928341</td>\n      <td>29.794273</td>\n      <td>58628236</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470366</th>\n      <td>43.100925</td>\n      <td>54.695900</td>\n      <td>48.361347</td>\n      <td>7.876321</td>\n      <td>58628237</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470367</th>\n      <td>42.648220</td>\n      <td>55.220318</td>\n      <td>49.737850</td>\n      <td>23.568872</td>\n      <td>58628240</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470368</th>\n      <td>42.856087</td>\n      <td>55.089550</td>\n      <td>49.398132</td>\n      <td>15.736362</td>\n      <td>58628241</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470369</th>\n      <td>42.952900</td>\n      <td>54.812893</td>\n      <td>48.901592</td>\n      <td>7.492440</td>\n      <td>58628242</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470370</th>\n      <td>47.417778</td>\n      <td>50.406380</td>\n      <td>52.117661</td>\n      <td>0.644093</td>\n      <td>58628255</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470371</th>\n      <td>47.527199</td>\n      <td>52.467194</td>\n      <td>47.415855</td>\n      <td>2.363693</td>\n      <td>58628299</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470372</th>\n      <td>47.533028</td>\n      <td>52.703342</td>\n      <td>47.493408</td>\n      <td>1.075663</td>\n      <td>58628300</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470373</th>\n      <td>43.021019</td>\n      <td>52.529324</td>\n      <td>51.973789</td>\n      <td>20.666836</td>\n      <td>58628373</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470374</th>\n      <td>44.489315</td>\n      <td>52.920021</td>\n      <td>45.290688</td>\n      <td>1.065083</td>\n      <td>58628374</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470375</th>\n      <td>44.116119</td>\n      <td>54.117611</td>\n      <td>44.505085</td>\n      <td>3.411104</td>\n      <td>58628375</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470376</th>\n      <td>41.948608</td>\n      <td>53.385941</td>\n      <td>52.083534</td>\n      <td>6.630814</td>\n      <td>58628376</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470377</th>\n      <td>42.090679</td>\n      <td>53.283157</td>\n      <td>52.149834</td>\n      <td>9.253721</td>\n      <td>58628377</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470378</th>\n      <td>42.311520</td>\n      <td>54.491764</td>\n      <td>51.397469</td>\n      <td>10.536137</td>\n      <td>58628378</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2470379</th>\n      <td>46.122204</td>\n      <td>50.198963</td>\n      <td>52.686401</td>\n      <td>193.612411</td>\n      <td>58628956</td>\n      <td>127</td>\n    </tr>\n  </tbody>\n</table>\n<p>118652623 rows × 6 columns</p>\n</div>"},"exec_count":7}},"exec_count":7,"start":1547644154735,"input":"dfa","scrolled":false,"state":"done","pos":5,"type":"cell","end":1547644154787,"id":"b5099a","kernel":"anaconda3"}
{"output":{"0":{"name":"stdout","text":"                 x          y          z          dens        ID  snap\n0  5027  46.652546  50.480007  48.031471  526875.62500  58304188   122\n8  986   46.604977  50.537735  48.017849  170030.31250  58304188   123\n16 206   46.574314  50.577168  48.006504  522335.90625  58304188   124\n24 28    46.531536  50.637737  47.988941  882011.37500  58304188   125\n32 236   46.502686  50.679474  47.978268  803143.25000  58304188   126\n40 160   46.459652  50.741268  47.961018  178254.18750  58304188   127\n"}},"exec_count":9,"start":1547644188534,"input":"dfSelect = dfa[dfa[\"ID\"] == 58304188]\nprint(dfSelect)","scrolled":false,"state":"done","pos":7,"type":"cell","end":1547644188827,"id":"4235a3","kernel":"anaconda3"}
{"output":{"0":{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-f2f67e514fba>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    249\u001b[0m     \"\"\"\n\u001b[1;32m    250\u001b[0m     \u001b[0;32mglobal\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 251\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    252\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    253\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/ipykernel/pylab/backend_inline.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(close, block)\u001b[0m\n\u001b[1;32m     37\u001b[0m             display(\n\u001b[1;32m     38\u001b[0m                 \u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 39\u001b[0;31m                 \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_fetch_figure_metadata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     40\u001b[0m             )\n\u001b[1;32m     41\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/IPython/core/display.py\u001b[0m in \u001b[0;36mdisplay\u001b[0;34m(include, exclude, metadata, transient, display_id, *objs, **kwargs)\u001b[0m\n\u001b[1;32m    302\u001b[0m             \u001b[0mpublish_display_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmetadata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    303\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 304\u001b[0;31m             \u001b[0mformat_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmd_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minclude\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mexclude\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    305\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mformat_dict\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    306\u001b[0m                 \u001b[0;31m# nothing to display (e.g. _ipython_display_ took over)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mformat\u001b[0;34m(self, obj, include, exclude)\u001b[0m\n\u001b[1;32m    178\u001b[0m             \u001b[0mmd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    179\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 180\u001b[0;31m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    181\u001b[0m             \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    182\u001b[0m                 \u001b[0;31m# FIXME: log the exception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<decorator-gen-9>\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mcatch_format_error\u001b[0;34m(method, self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    222\u001b[0m     \u001b[0;34m\"\"\"show traceback on failed format call\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    223\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 224\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    225\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    226\u001b[0m         \u001b[0;31m# don't warn on NotImplementedErrors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n\u001b[1;32m    339\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    340\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 341\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mprinter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    342\u001b[0m             \u001b[0;31m# Finally look for special method names\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    343\u001b[0m             \u001b[0mmethod\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_real_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_method\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(fig)\u001b[0m\n\u001b[1;32m    242\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    243\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'png'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 244\u001b[0;31m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'png'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    245\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'retina'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;34m'png2x'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    246\u001b[0m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mretina_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(fig, fmt, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m    126\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m     \u001b[0mbytes_io\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBytesIO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 128\u001b[0;31m     \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbytes_io\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    129\u001b[0m     \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbytes_io\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    130\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfmt\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'svg'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/matplotlib/backend_bases.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, **kwargs)\u001b[0m\n\u001b[1;32m   2216\u001b[0m                 \u001b[0mbbox_filtered\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2217\u001b[0m                 \u001b[0;32mfor\u001b[0m \u001b[0ma\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mbbox_artists\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2218\u001b[0;31m                     \u001b[0mbbox\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_window_extent\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2219\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_clip_on\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2220\u001b[0m                         \u001b[0mclip_box\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_clip_box\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/matplotlib/collections.py\u001b[0m in \u001b[0;36mget_window_extent\u001b[0;34m(self, renderer)\u001b[0m\n\u001b[1;32m    206\u001b[0m         \u001b[0;31m# TODO:check to ensure that this does not fail for\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    207\u001b[0m         \u001b[0;31m# cases other than scatter plot legend\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 208\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_datalim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtransforms\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mIdentityTransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    209\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_prepare_points\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/matplotlib/collections.py\u001b[0m in \u001b[0;36mget_datalim\u001b[0;34m(self, transData)\u001b[0m\n\u001b[1;32m    197\u001b[0m             result = mpath.get_path_collection_extents(\n\u001b[1;32m    198\u001b[0m                 \u001b[0mtransform\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfrozen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpaths\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_transforms\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 199\u001b[0;31m                 offsets, transOffset.frozen())\n\u001b[0m\u001b[1;32m    200\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minverse_transformed\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtransData\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    201\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/matplotlib/path.py\u001b[0m in \u001b[0;36mget_path_collection_extents\u001b[0;34m(master_transform, paths, transforms, offsets, offset_transform)\u001b[0m\n\u001b[1;32m   1013\u001b[0m     return Bbox.from_extents(*_path.get_path_collection_extents(\n\u001b[1;32m   1014\u001b[0m         \u001b[0mmaster_transform\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpaths\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0matleast_3d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtransforms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1015\u001b[0;31m         offsets, offset_transform))\n\u001b[0m\u001b[1;32m   1016\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1017\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/projects/anaconda3/lib/python3.6/site-packages/matplotlib/path.py\u001b[0m in \u001b[0;36mshould_simplify\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    264\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_has_nonfinite\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    265\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 266\u001b[0;31m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    267\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mshould_simplify\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    268\u001b[0m         \"\"\"\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "],"ename":"KeyboardInterrupt","evalue":""}},"exec_count":15,"start":1547644198428,"input":"x = dfa.x#[:10000]\ny = dfa.y#[:10000]\n#densa = dfa.dens[:10000].values\n#dens = densa/25\n\nplt.scatter(x, y, 0.1)\nplt.show()","state":"done","pos":9,"type":"cell","end":1547644605185,"id":"6966f2","kernel":"anaconda3"}
{"exec_count":161,"input":"sel=(df0.x>50)&(df0.x<55)\ndf0[sel].plot.scatter(x='x',y='y',s=0.1)","state":"done","pos":6,"cell_type":"markdown","type":"cell","id":"64625a","kernel":"anaconda3"}
{"exec_count":10,"start":1547644188837,"input":"x = dfSelect[\"snap\"]\ny = dfSelect[\"x\"]\n\nxSmooth = np.linspace(np.min(x), np.max(x), 51)\nfspline = scipy.interpolate.interp1d(x, y, \"quadratic\")\nfspline2 = scipy.interpolate.interp1d(x, y, \"cubic\")\nySmooth = fspline(xSmooth)\ny2Smooth = fspline2(xSmooth)","scrolled":false,"state":"done","pos":8,"type":"cell","end":1547644188842,"id":"4fb6b0","kernel":"anaconda3"}
{"output":{"0":{"more_output":true}},"exec_count":4,"start":1547644112286,"input":"#create list with each path\n#/store/clues/HESTIA/RE_SIMS/2048/GAL_FOR/37_11/output/snapdir_022/snapshot_022.7.hdf5\npathList = []\nfor i in range(numSnapdirs):\n    currentSnapdir = \"snapdir_\" + \"%03d\" % i + \"/\"\n    for j in range(numSnapshots):\n        currentSnapshot = \"snapshot_\" + \"%03d\" % i + \".\" + str(j) + \".hdf5\"\n        currentPath = path + currentSnapdir + currentSnapshot\n        pathList.append(currentPath)\nprint(pathList)","scrolled":true,"state":"done","pos":2,"type":"cell","end":1547644112328,"id":"2505e1","kernel":"anaconda3"}
{"exec_count":3,"start":1547644112276,"input":"#constants\nnumSnapdirs = 128\nnumSnapshots = 8\npath = '/store/clues/HESTIA/RE_SIMS/2048/GAL_FOR/37_11/output/'","state":"done","pos":1,"type":"cell","end":1547644112281,"id":"118fe4","kernel":"anaconda3"}
{"start":1547644604295,"input":"#f = h5py.File('/store/clues/HESTIA/RE_SIMS/2048/GAL_FOR/37_11/output/snapdir_022/snapshot_022.7.hdf5', 'r')\n#list(f.keys())\n#ID  = np.uint32(f['/PartType0/ParticleIDs'].value)\n#print(len(ID))\n\n#pos = np.float32(f['/PartType0/Coordinates'].value)\n#ID  = np.uint32(f['/PartType0/ParticleIDs'].value)\n\n#df.append(ID,pos)\n\n#a = dfa.dens[:10].values\n#print(a)\n#b = a / 100\n#print(b)","state":"done","pos":10,"type":"cell","end":1547644604295,"id":"a418fa","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>y</th>\n      <th>z</th>\n      <th>dens</th>\n      <th>ID</th>\n      <th>snap</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1.186526e+08</td>\n      <td>1.186526e+08</td>\n      <td>1.186526e+08</td>\n      <td>1.186526e+08</td>\n      <td>1.186526e+08</td>\n      <td>1.186526e+08</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.809891e+01</td>\n      <td>1.809891e+01</td>\n      <td>1.809891e+01</td>\n      <td>2.521798e+04</td>\n      <td>4.410636e+07</td>\n      <td>1.244991e+02</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3.403425e+01</td>\n      <td>3.403425e+01</td>\n      <td>3.403425e+01</td>\n      <td>6.113227e+05</td>\n      <td>6.306486e+06</td>\n      <td>1.707818e+00</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>3.456381e-07</td>\n      <td>4.836077e-07</td>\n      <td>1.393293e-06</td>\n      <td>1.507569e-02</td>\n      <td>3.355443e+07</td>\n      <td>1.220000e+02</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2.774444e+01</td>\n      <td>3.488257e+01</td>\n      <td>3.077706e+01</td>\n      <td>1.188143e+00</td>\n      <td>3.872657e+07</td>\n      <td>1.230000e+02</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>4.635962e+01</td>\n      <td>5.126282e+01</td>\n      <td>4.803590e+01</td>\n      <td>9.586143e+00</td>\n      <td>4.393541e+07</td>\n      <td>1.240000e+02</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>6.893924e+01</td>\n      <td>6.709458e+01</td>\n      <td>6.515394e+01</td>\n      <td>8.671930e+01</td>\n      <td>4.909708e+07</td>\n      <td>1.260000e+02</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000e+02</td>\n      <td>1.000000e+02</td>\n      <td>1.000000e+02</td>\n      <td>2.270858e+08</td>\n      <td>5.862930e+07</td>\n      <td>1.270000e+02</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":8}},"exec_count":8,"start":1547644156327,"input":"dfa.describe()","scrolled":true,"state":"done","pos":5.5,"type":"cell","end":1547644188528,"id":"dda5a1","kernel":"anaconda3"}
{"exec_count":5,"start":1547644112335,"input":"#lets look at a smaller list\npathList = pathList[-48:]","scrolled":true,"state":"done","pos":2.5,"type":"cell","end":1547644112370,"id":"bea2b4","kernel":"anaconda3"}
{"output":{"0":{"data":{"image/png":"a89160bdca78c54ec36d8d9aebdba5d973c03eca"},"metadata":{"needs_background":"light"}}},"exec_count":11,"start":1547644188850,"input":"plt.plot(xSmooth, ySmooth, \":\")\nplt.plot(xSmooth, y2Smooth, \"g:\")\nplt.plot(x, y, \"o\")\nplt.show()","scrolled":true,"state":"done","pos":8.5,"type":"cell","end":1547644189056,"id":"22b095","kernel":"anaconda3"}
{"exec_count":2,"start":1547644112194,"input":"import scipy.interpolate","state":"done","pos":0.5,"type":"cell","end":1547644112270,"id":"256ce1","kernel":"anaconda3"}
{"output":{"0":{"data":{"image/png":"5f57973d2badd544fca34e7b30c09bb590561b0f"},"metadata":{"needs_background":"light"}}},"exec_count":26,"start":1547644698684,"input":"from mpl_toolkits.mplot3d import Axes3D\n\nfig = plt.figure()\nax = fig.gca(projection=\"3d\")\nax.plot(xSmooth, ySmooth, zSmooth)\n\nax.view_init(30, 120)\nplt.show()","scrolled":true,"state":"done","pos":8.75,"type":"cell","end":1547644698931,"id":"7a7e8f","kernel":"anaconda3"}
{"exec_count":25,"start":1547644696424,"input":"snap = dfSelect[\"snap\"]\nxRaw = dfSelect[\"x\"]\nyRaw = dfSelect[\"y\"]\nzRaw = dfSelect[\"z\"]\n\nsnapSmooth = np.linspace(np.min(snap), np.max(snap), 51)\n\nsmoothingType = [\"linear\", \"nearest\", \"quadratic\", \"cubic\"]\n\nxSpline = scipy.interpolate.interp1d(snap, xRaw, smoothingType[2])\nySpline = scipy.interpolate.interp1d(snap, yRaw, smoothingType[2])\nzSpline = scipy.interpolate.interp1d(snap, zRaw, smoothingType[2])\n\nxSmooth = xSpline(snapSmooth)\nySmooth = ySpline(snapSmooth)\nzSmooth = zSpline(snapSmooth)","state":"done","pos":8.625,"type":"cell","end":1547644696425,"id":"28e9cc","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"\n    <div class=\"bk-root\">\n        <a href=\"https://bokeh.pydata.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n        <span id=\"1969\">Loading BokehJS ...</span>\n    </div>"}},"1":{"data":{"application/javascript":"\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof (root._bokeh_onload_callbacks) === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  var JS_MIME_TYPE = 'application/javascript';\n  var HTML_MIME_TYPE = 'text/html';\n  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n  var CLASS_NAME = 'output_bokeh rendered_html';\n\n  /**\n   * Render data to the DOM node\n   */\n  function render(props, node) {\n    var script = document.createElement(\"script\");\n    node.appendChild(script);\n  }\n\n  /**\n   * Handle when an output is cleared or removed\n   */\n  function handleClearOutput(event, handle) {\n    var cell = handle.cell;\n\n    var id = cell.output_area._bokeh_element_id;\n    var server_id = cell.output_area._bokeh_server_id;\n    // Clean up Bokeh references\n    if (id != null && id in Bokeh.index) {\n      Bokeh.index[id].model.document.clear();\n      delete Bokeh.index[id];\n    }\n\n    if (server_id !== undefined) {\n      // Clean up Bokeh references\n      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n      cell.notebook.kernel.execute(cmd, {\n        iopub: {\n          output: function(msg) {\n            var id = msg.content.text.trim();\n            if (id in Bokeh.index) {\n              Bokeh.index[id].model.document.clear();\n              delete Bokeh.index[id];\n            }\n          }\n        }\n      });\n      // Destroy server and session\n      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n      cell.notebook.kernel.execute(cmd);\n    }\n  }\n\n  /**\n   * Handle when a new output is added\n   */\n  function handleAddOutput(event, handle) {\n    var output_area = handle.output_area;\n    var output = handle.output;\n\n    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n    if ((output.output_type != \"display_data\") || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n      return\n    }\n\n    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n\n    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n      // store reference to embed id on output_area\n      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n    }\n    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n      var bk_div = document.createElement(\"div\");\n      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n      var script_attrs = bk_div.children[0].attributes;\n      for (var i = 0; i < script_attrs.length; i++) {\n        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n      }\n      // store reference to server id on output_area\n      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n    }\n  }\n\n  function register_renderer(events, OutputArea) {\n\n    function append_mime(data, metadata, element) {\n      // create a DOM node to render to\n      var toinsert = this.create_output_subarea(\n        metadata,\n        CLASS_NAME,\n        EXEC_MIME_TYPE\n      );\n      this.keyboard_manager.register_events(toinsert);\n      // Render to node\n      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n      render(props, toinsert[toinsert.length - 1]);\n      element.append(toinsert);\n      return toinsert\n    }\n\n    /* Handle when an output is cleared or removed */\n    events.on('clear_output.CodeCell', handleClearOutput);\n    events.on('delete.Cell', handleClearOutput);\n\n    /* Handle when a new output is added */\n    events.on('output_added.OutputArea', handleAddOutput);\n\n    /**\n     * Register the mime type and append_mime function with output_area\n     */\n    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n      /* Is output safe? */\n      safe: true,\n      /* Index of renderer in `output_area.display_order` */\n      index: 0\n    });\n  }\n\n  // register the mime type if in Jupyter Notebook environment and previously unregistered\n  if (root.Jupyter !== undefined) {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  }\n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"1969\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) { callback() });\n    }\n    finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.info(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(js_urls, callback) {\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.log(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.log(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = js_urls.length;\n    for (var i = 0; i < js_urls.length; i++) {\n      var url = js_urls[i];\n      var s = document.createElement('script');\n      s.src = url;\n      s.async = false;\n      s.onreadystatechange = s.onload = function() {\n        root._bokeh_is_loading--;\n        if (root._bokeh_is_loading === 0) {\n          console.log(\"Bokeh: all BokehJS libraries loaded\");\n          run_callbacks()\n        }\n      };\n      s.onerror = function() {\n        console.warn(\"failed to load library \" + url);\n      };\n      console.log(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.getElementsByTagName(\"head\")[0].appendChild(s);\n    }\n  };var element = document.getElementById(\"1969\");\n  if (element == null) {\n    console.log(\"Bokeh: ERROR: autoload.js configured with elementid '1969' but no matching script tag was found. \")\n    return false;\n  }\n\n  var js_urls = [\"https://cdn.pydata.org/bokeh/release/bokeh-1.0.3.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.0.3.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.0.3.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.0.3.min.js\"];\n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    \n    function(Bokeh) {\n      \n    },\n    function(Bokeh) {\n      console.log(\"Bokeh: injecting CSS: https://cdn.pydata.org/bokeh/release/bokeh-1.0.3.min.css\");\n      Bokeh.embed.inject_css(\"https://cdn.pydata.org/bokeh/release/bokeh-1.0.3.min.css\");\n      console.log(\"Bokeh: injecting CSS: https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.0.3.min.css\");\n      Bokeh.embed.inject_css(\"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.0.3.min.css\");\n      console.log(\"Bokeh: injecting CSS: https://cdn.pydata.org/bokeh/release/bokeh-tables-1.0.3.min.css\");\n      Bokeh.embed.inject_css(\"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.0.3.min.css\");\n    }\n  ];\n\n  function run_inline_js() {\n    \n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (var i = 0; i < inline_js.length; i++) {\n        inline_js[i].call(root, root.Bokeh);\n      }if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"1969\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.log(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(js_urls, function() {\n      console.log(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"}},"2":{"data":{"text/html":"\n\n\n\n\n\n  <div class=\"bk-root\" id=\"54184473-4763-4cdb-a534-ccf132bc7cb0\" data-root-id=\"2212\"></div>\n"}},"3":{"more_output":true}},"exec_count":30,"start":1547645073259,"input":"from bokeh.layouts import gridplot\nfrom bokeh.plotting import figure, show, output_file\nfrom bokeh.io import output_notebook\noutput_notebook()\nx = np.linspace(0, 4*np.pi, 100)\ny = np.sin(x)\n\nTOOLS = \"pan,wheel_zoom,box_zoom,reset,save,box_select\"\n\np1 = figure(title=\"Legend Example\", tools=TOOLS)\n\np1.circle(x,   y, legend=\"sin(x)\")\np1.circle(x, 2*y, legend=\"2*sin(x)\", color=\"orange\")\np1.circle(x, 3*y, legend=\"3*sin(x)\", color=\"green\")\n\np2 = figure(title=\"Another Legend Example\", tools=TOOLS)\n\np2.circle(x, y, legend=\"sin(x)\")\np2.line(x, y, legend=\"sin(x)\")\n\np2.line(x, 2*y, legend=\"2*sin(x)\", line_dash=(4, 4), line_color=\"orange\", line_width=2)\n\np2.square(x, 3*y, legend=\"3*sin(x)\", fill_color=None, line_color=\"green\")\np2.line(x, 3*y, legend=\"3*sin(x)\", line_color=\"green\")\n\noutput_file(\"legend.html\", title=\"legend.py example\")\n\nshow(gridplot([p1, p2], ncols=2, plot_width=400, plot_height=400))  # open a browser","scrolled":true,"state":"done","pos":8.875,"type":"cell","end":1547645074106,"id":"7939b6","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/plain":"['snapshot_127.1.hdf5',\n 'snapshot_127.6.hdf5',\n 'snapshot_127.7.hdf5',\n 'snapshot_127.4.hdf5',\n 'snapshot_127.2.hdf5',\n 'snapshot_127.0.hdf5',\n 'snapshot_127.3.hdf5',\n 'snapshot_127.5.hdf5']"},"exec_count":55}},"exec_count":55,"start":1547720692007,"input":"path = '/store/clues/HESTIA/RE_SIMS/2048/GAL_FOR/37_11/output/snapdir_127'\n\n#h5files = [f for f in os.listdir(folder) if os.path.isfile(os.path.join(folder, f))]\nos.listdir(path)","scrolled":true,"state":"done","pos":11,"type":"cell","end":1547720692087,"id":"e7aa01","kernel":"anaconda3"}
{"output":{"0":{"name":"stdout","text":"NumPart_ThisFile [2470380  366016   20641 2161035  117700       3       0]\nNumPart_Total [19759498  3474944   245696 16799434   900164       47        0]\nNumPart_Total_HighWord [0 0 0 0 0 0 0]\nMassTable [0. 0. 0. 0. 0. 0. 0.]\nTime 0.9999999999999996\nRedshift 4.440892098500626e-16\nBoxSize 100.0\nNumFilesPerSnapshot 8\nOmega0 0.318\nOmegaLambda 0.682\nOmegaBaryon 0.048\nHubbleParam 0.6777\nFlag_Sfr 1\nFlag_Cooling 1\nFlag_StellarAge 0\nFlag_Metals 0\nFlag_Feedback 1\nFlag_DoublePrecision 0\nComposition_vector_length 0\nGit_commit b'unknown'\nGit_date b'unknown'\nUnitLength_in_cm 3.085678e+24\nUnitMass_in_g 1.989e+43\nUnitVelocity_in_cm_per_s 100000.0\n8\n"}},"exec_count":53,"start":1547718019430,"input":"\nattrs = f['/Header'].attrs\nfor i in list(attrs):\n    print(i,attrs[i])\nprint(attrs[\"NumFilesPerSnapshot\"])\n","state":"done","pos":12,"type":"cell","end":1547718019494,"id":"7ced2c","kernel":"anaconda3"}
{"output":{"0":{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-50-3bfc6d8b10f0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m         \u001b[0mjob\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"do nothing\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mabba\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvanity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mabba\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: type object 'abba' has no attribute 'name'"],"ename":"AttributeError","evalue":"type object 'abba' has no attribute 'name'"}},"exec_count":50,"input":"class abba:\n    def __init__():\n        abba.name = 'haha'\n\n    def vanity():\n        job = \"do nothing\"\n","state":"done","pos":13,"type":"cell","id":"1c73d7","kernel":"anaconda3"}
{"output":{"0":{"name":"stdout","text":"<HDF5 file \"snapshot_127.7.hdf5\" (mode r)>\n"}},"exec_count":54,"start":1547719796247,"input":"print(f)","state":"done","pos":12.5,"type":"cell","end":1547719796347,"id":"23aa93","kernel":"anaconda3"}
{"output":{"0":{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-57-64a09f9b268f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0md\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"x\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mpos\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"y\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mpos\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"z\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mpos\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"dens\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mdens\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0;34m\"ID\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mID\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0md\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m\"snap\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mID\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0md\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'dict' object has no attribute 'append'"],"ename":"AttributeError","evalue":"'dict' object has no attribute 'append'"}},"exec_count":57,"start":1547733217959,"input":"d = {\"x\":pos[:,0],\"y\":pos[:,1],\"z\":pos[:,2],\"dens\":dens , \"ID\":ID}\nd.append({\"snap\":ID*0+s})\nd","state":"done","pos":14,"type":"cell","end":1547733218135,"id":"b72299","kernel":"anaconda3"}
{"type":"cell","id":"2662e6","pos":12.25,"input":""}